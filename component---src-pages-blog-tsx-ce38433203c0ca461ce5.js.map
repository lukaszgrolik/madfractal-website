{"version":3,"sources":["webpack:///./src/pages/blog.tsx","webpack:///./src/components/post-preview-block/index.tsx"],"names":["Wrapper","styled","div","PostsList","ul","Blog","useStaticQuery","site","posts","siteMetadata","title","style","backgroundImage","background","padding","edges","map","edge","frontmatter","node","matchResult","date","match","path","key","id","post","Link","ImageBlock","PostContent","PostDate","Heading","h3","PostPreviewBlock","props","postPath","to","src","thumbnail","childImageSharp","fluid","className","alt"],"mappings":"6FAAA,4FAWMA,EAAUC,IAAOC,IAAV,oEAAGD,CAAH,mFAKPE,EAAYF,IAAOG,GAAV,sEAAGH,CAAH,uFAqGAI,UA1FF,WAAM,MAUgBC,YAAe,cAAzCC,EAVU,EAUVA,KAAMC,EAVI,EAUJA,MAgCb,OACE,kBAAC,IAAD,KACE,kBAAC,SAAD,KACE,+BAAQD,EAAKE,aAAaC,MAA1B,YAGF,kBAACV,EAAD,CACEW,MAAO,CACLC,gBAAiB,gEAEnB,yBAAKD,MAAO,CAACE,WAAY,gEAAiEC,QAAS,iBACjG,kBAAC,IAAD,KACI,kBAACX,EAAD,KACGK,GAASA,EAAMO,MAAMC,KAAI,SAAAC,GAAQ,IACzBC,EAAeD,EAAKE,KAApBD,YACDE,EAAcF,EAAYG,KAAKC,MAAM,2BAC3C,IAAKF,EAAa,OAAO,KAEAA,EALO,GAKPA,EALO,GAKPA,EALO,GAMUF,EAAYK,KAEtD,OACE,wBAAIC,IAAKP,EAAKE,KAAKM,IACjB,kBAAC,IAAD,CAAkBC,KAAMT,EAAKE,kB,oCC5FnD,mFAMMnB,EAAUC,YAAO0B,KAAV,kFAAG1B,CAAH,oMAgBP2B,EAAa3B,IAAOC,IAAV,qFAAGD,CAAH,qIAWZD,GAIE6B,EAAc5B,IAAOC,IAAV,sFAAGD,CAAH,4CAOX6B,EAAW7B,IAAOC,IAAV,mFAAGD,CAAH,kDAIR8B,EAAU9B,IAAO+B,GAAV,kFAAG/B,CAAH,iFAUAgC,EAAmD,SAACC,GAAU,IAElEhB,EADQgB,EAARR,KACAR,YACDE,EAAcF,EAAYG,KAAKC,MAAM,2BAC3C,IAAKF,EAAa,OAAO,KACAA,EALgD,OAMnEe,EAAW,SADQf,EALgD,GAM3D,IADWA,EALgD,GAM/BF,EAAYK,KAEtD,OACE,kBAACvB,EAAD,CACEoC,GAAID,GAEJ,kBAACP,EAAD,KACE,yBACES,IAAKnB,EAAYoB,UAAUC,gBAAgBC,MAAMH,IACjDI,UAAU,WACVC,IAAI,eAIR,kBAACb,EAAD,KACE,6BACE,kBAACC,EAAD,KAAWZ,EAAYG,OAGzB,6BACE,kBAACU,EAAD,KAAUb,EAAYR","file":"component---src-pages-blog-tsx-ce38433203c0ca461ce5.js","sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { graphql, navigate, useStaticQuery, Link } from 'gatsby';\nimport {Helmet} from 'react-helmet';\n\nimport {Post} from '../common/types/post';\n\nimport { WideLayout, LayoutContentBlock } from '../components/layout';\nimport { QueryData } from '../common/types/query-data';\nimport {PostPreviewBlock} from '../components/post-preview-block';\n\nconst Wrapper = styled.div`\n  background-size: cover;\n  background-position: center;\n  background-attachment: fixed;\n`;\nconst PostsList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 2em;\n\n  > li {\n    display: flex;\n  }\n`;\n\n// const Blog = (props: {data: QueryData}) => {\nconst Blog = () => {\n  // const { data } = props;\n  // const { post } = data;\n  // const { frontmatter, fields } = post;\n  // const defaultPostPath = `/blog/${frontmatter.date}${fields.slug}`;\n\n  // useEffect(() => {\n  //   navigate(defaultPostPath);\n  // });\n\n  const {site, posts}: QueryData = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n      posts: allMarkdownRemark(\n        sort: { fields: [frontmatter___date], order: DESC }\n        filter: { fileAbsolutePath: { regex: \"/posts/\" } }\n      ) {\n        edges {\n          node {\n            id\n            frontmatter {\n              path\n              date(formatString: \"YYYY-MM-DD\")\n              title\n              thumbnail {\n                childImageSharp {\n                  fluid {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <WideLayout>\n      <Helmet>\n        <title>{site.siteMetadata.title} | Blog</title>\n      </Helmet>\n\n      <Wrapper\n        style={{\n          backgroundImage: `url('/images/screenshot_3840x2160_2020-07-19_12-49-26.jpg')`\n        }}>\n        <div style={{background: 'linear-gradient(transparent, hsl(270, 33%, 25%, .5), #171717)', padding: '150px 0 10em'}}>\n          <LayoutContentBlock>\n              <PostsList>\n                {posts && posts.edges.map(edge => {\n                  const {frontmatter} = edge.node;\n                  const matchResult = frontmatter.date.match(/(\\d{4})-(\\d{2})-(\\d{2})/);\n                  if (!matchResult) return null;\n\n                  const [_, year, month] = matchResult;\n                  const postPath = `/blog/${year}/${month}${frontmatter.path}`;\n\n                  return (\n                    <li key={edge.node.id}>\n                      <PostPreviewBlock post={edge.node} />\n                    </li>\n                  );\n                })}\n              </PostsList>\n          </LayoutContentBlock>\n        </div>\n      </Wrapper>\n    </WideLayout>\n  );\n};\n\n// export const query = graphql`\n//   query {\n//     post: markdownRemark(fileAbsolutePath: {regex: \"/posts/\"}) {\n//       fields {\n//         slug\n//       }\n//       frontmatter {\n//         date(formatString: \"YYYY/MM\")\n//       }\n//     }\n//   }\n// `;\n\nexport default Blog;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {Link} from 'gatsby';\n\nimport {Post} from '../../common/types/post';\n\nconst Wrapper = styled(Link)`\n  display: block;\n  /* background-color: rgba(255, 255, 255, 0.05); */\n  background-color: rgba(0, 0, 0, 0.25);\n  /* width: 33.333%; */\n  /* padding: 15px; */\n  transition-duration: 100ms;\n  color: rgba(255, 255, 255, 0.75);\n  text-decoration: none;\n  box-shadow: 0 0 1em #000;\n\n  &:hover {\n    /* background-color: rgba(255, 255, 255, 0.1); */\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n`;\nconst ImageBlock = styled.div`\n  overflow: hidden;\n\n  img {\n    width: 100%;\n    display: block;\n    /* object-fit: cover; */\n    transform: scale(1);\n    transition: transform .2s;\n  }\n\n  ${Wrapper}:hover & img {\n    transform: scale(1.2);\n  }\n`;\nconst PostContent = styled.div`\n  padding: 1em;\n\n  > * + * {\n    margin-top: 0.5em;\n  }\n`;\nconst PostDate = styled.div`\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 0.8em;\n`;\nconst Heading = styled.h3`\n  color: rgba(255, 255, 255, 0.75);\n  font-family: 'Pirata One', serif;\n  font-size: 32px;\n`;\n\ninterface Props {\n  post: Post;\n}\n\nexport const PostPreviewBlock: React.FunctionComponent<Props> = (props) => {\n  const {post} = props;\n  const {frontmatter} = post;\n  const matchResult = frontmatter.date.match(/(\\d{4})-(\\d{2})-(\\d{2})/);\n  if (!matchResult) return null;\n  const [_, year, month] = matchResult;\n  const postPath = `/blog/${year}/${month}${frontmatter.path}`;\n\n  return (\n    <Wrapper\n      to={postPath}\n    >\n      <ImageBlock>\n        <img\n          src={frontmatter.thumbnail.childImageSharp.fluid.src}\n          className=\"lazyload\"\n          alt=\"Thumbnail\"\n        />\n      </ImageBlock>\n\n      <PostContent>\n        <div>\n          <PostDate>{frontmatter.date}</PostDate>\n        </div>\n\n        <div>\n          <Heading>{frontmatter.title}</Heading>\n        </div>\n      </PostContent>\n    </Wrapper>\n  );\n};"],"sourceRoot":""}